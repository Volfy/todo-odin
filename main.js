(()=>{"use strict";const e=(()=>{const e=(()=>{let e=document.querySelector("table tbody");return{refreshAll:t=>{(()=>{const t=document.createElement("tbody");e.parentNode.replaceChild(t,e),e=t})(),t.forEach((t=>{(({id:t,title:o,dueDate:n,projectName:c})=>{((t,o,n,c)=>{const r=e.insertRow();r.dataset.num=t;const d=r.insertCell(0),l=document.createElement("input");l.type="checkbox",l.addEventListener("change",(()=>{(e=>{document.querySelector(`tr[data-num='${e}']`).classList.toggle("done")})(t)})),d.append(l),r.insertCell(1).textContent=o,r.insertCell(2).textContent=n,r.insertCell(3).textContent=c;const s=r.insertCell(4),a=document.createElement("button");a.dataset.num=t,a.classList.add("edit"),a.textContent="Edit",s.append(a);const i=r.insertCell(5),u=document.createElement("button");u.dataset.num=t,u.classList.add("rmv"),u.textContent="Remove",i.append(u)})(t,o,n,c)})(t)}))}}})(),t=(()=>{const e=document.querySelector(".projects-list");return{refreshAll:t=>{document.querySelectorAll("li.project").forEach((e=>e.remove())),t.forEach((t=>{(({id:t,name:n,tasks:c})=>{((t,n,c)=>{const r=document.createElement("li"),d=document.createElement("button"),l=document.createElement("div");r.id=`project-${t}`,o.addProject(t,n),l.classList.add("project-no"),d.classList.add("project"),r.classList.add("project"),l.textContent=c,d.textContent=n,d.append(l),r.append(d),e.append(r)})(t,n,c)})(t)}))}}})(),o=(()=>{const e=document.querySelector(".form-section"),t=document.querySelector("#td-project-input"),o=e=>{const t=document.querySelector(".add-todo"),o=document.querySelector(".add-project");switch(e){case"todo":t.classList.add("current"),o.classList.remove("current");break;case"project":o.classList.add("current"),t.classList.remove("current")}};return{addProject:(e,o)=>{const n=document.createElement("option");n.value=`project-${e}`,n.textContent=o,t.append(n)},show:()=>{o("todo"),e.classList.toggle("form-open")},switchFormsTo:o}})();return{init:()=>{const e=document.querySelector(".add-new-button"),t=document.querySelector("#to-do-tab"),n=document.querySelector("#project-tab"),c=document.querySelector("#close-tab");e.addEventListener("click",o.show),c.addEventListener("click",o.show),t.addEventListener("click",(()=>{o.switchFormsTo("todo")})),n.addEventListener("click",(()=>{o.switchFormsTo("project")}))},project:t,todo:e,updateViewAll:e=>{document.querySelector("#view-all .project-no").textContent=e}}})(),t=(e,t,o,n,c)=>({id:e,title:t,dueDate:o,projectName:n,priority:c}),o=(e,t,o)=>({id:e,name:t,tasks:o});let n=[o(1,"jogn1",1e3),o(2,"jogn2",300),o(3,"jogn3",20),o(4,"jogn4",0),o(5,"jogn5",1),o(6,"jogn6",19)],c=[t(1,"hello","0/09/2020","godoe",5),t(2,"hello2","0/09/2020","godoe",5),t(3,"hello3","0/09/2020","godoe",5),t(4,"hello4","0/09/233020","go4doe",2),t(5,"hello5","0/09/2020","godoe",1)];n[3].name="HAHA I CAN CHANGE",e.init(),e.updateViewAll(22),e.project.refreshAll(n),e.todo.refreshAll(c)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,