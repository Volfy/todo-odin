(()=>{"use strict";const e=(()=>{const e=(()=>{let e=document.querySelector("table tbody");const t=()=>{const t=document.createElement("tbody");e.parentNode.replaceChild(t,e),e=t},o=e=>{document.querySelector(`tr[data-num='${e}']`).remove()};return{clearAll:t,refreshAll:r=>{t(),r.forEach((t=>{(({id:t,title:r,dueDate:c,projectName:n})=>{((t,r,c,n)=>{const d=e.insertRow();d.dataset.num=t;const l=d.insertCell(0),a=document.createElement("input");a.type="checkbox",a.dataset.num=t,l.append(a),d.insertCell(1).textContent=r,d.insertCell(2).textContent=c,d.insertCell(3).textContent=n;const s=d.insertCell(4),u=document.createElement("button");u.dataset.num=t,u.classList.add("edit"),u.textContent="Edit",s.append(u);const m=d.insertCell(5),p=document.createElement("button");p.dataset.num=t,p.classList.add("rmv"),p.textContent="Remove",p.addEventListener("click",(()=>o(t))),m.append(p)})(t,r,c,n)})(t)}))},remove:o}})(),t=e=>{document.querySelector("#view-all .project-no").textContent=e},o=(()=>{const e=document.querySelector(".projects-list");return{add:(t,o,c=0)=>{const n=document.createElement("li"),d=document.createElement("button"),l=document.createElement("div");n.id=`project-${t}`,r.addProject(t,o),l.classList.add("project-no"),d.classList.add("project"),n.classList.add("project"),l.textContent=c,d.textContent=o,d.append(l),n.append(d),e.append(n)},remove:e=>{document.querySelector(`#project-${e}`).remove(),r.removeProject(e)},update:(e,t)=>{document.querySelector(`#project-${e} .project-no`).textContent=t},updateViewAll:t}})(),r=(()=>{const e=document.querySelector("#td-project-input");return{addProject:(t,o)=>{const r=document.createElement("option");r.value=`project-${t}`,r.textContent=o,e.append(r)},removeProject:e=>{document.querySelector(`option[value='project-${e}']`).remove()}}})();return{todo:e,updateViewAll:t,project:o,form:r}})();e.project.add(1,"Jogn1",1e3),e.project.add(2,"Jogn2",1e3),e.project.add(3,"Jogn3",1e3),e.project.add(4,"Jogn4",1e3),e.project.add(5,"Jogn5",1e3),e.project.add(6,"Jogn6",1e3),e.project.add(7,"nonumber"),e.project.add(8,"blablabla"),e.project.remove(5),e.project.remove(1),e.project.update(6,22),e.project.update(3,2e3),e.updateViewAll(22);const t=(e,t,o,r,c)=>({id:e,title:t,dueDate:o,projectName:r,priority:c});let o=[t(1,"hello","0/09/2020","godoe",5),t(2,"hello2","0/09/2020","godoe",5),t(3,"hello3","0/09/2020","godoe",5),t(4,"hello4","0/09/233020","go4doe",2),t(5,"hello5","0/09/2020","godoe",1)];e.todo.refreshAll(o),e.todo.remove(3);const r=document.querySelector(".add-new-button"),c=document.querySelector(".form-section"),n=document.querySelector(".add-todo"),d=document.querySelector("#to-do-tab"),l=document.querySelector(".add-project"),a=document.querySelector("#project-tab"),s=document.querySelector("#close-tab");document.querySelectorAll("tr input").forEach((e=>{e.addEventListener("change",(()=>document.querySelector(`tr[data-num='${e.dataset.num}']`).classList.toggle("done")))})),r.addEventListener("click",(()=>{c.classList.toggle("form-open"),n.classList.add("current")})),d.addEventListener("click",(()=>{l.classList.remove("current"),n.classList.add("current")})),a.addEventListener("click",(()=>{n.classList.remove("current"),l.classList.add("current")})),s.addEventListener("click",(()=>{l.classList.remove("current"),n.classList.remove("current"),c.classList.remove("form-open")}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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akMsRUFBT0QsU0FBU0MsY0FBYyxpQkFFOUJtRCxFQUFXcEQsU0FBU0MsY0FBYyxhQUNsQ29ELEVBQVVyRCxTQUFTQyxjQUFjLGNBQ2pDcUQsRUFBY3RELFNBQVNDLGNBQWMsZ0JBQ3JDc0QsRUFBYXZELFNBQVNDLGNBQWMsZ0JBQ3BDdUQsRUFBV3hELFNBQVNDLGNBQWMsY0FHekJELFNBQVN5RCxpQkFBaUIsWUFFbEM5QyxTQUFRK0MsSUFDWEEsRUFBSTFCLGlCQUFpQixVQUNyQixJQUFNaEMsU0FBU0MsY0FBYyxnQkFBZ0J5RCxFQUFJeEMsUUFBUUMsU0FDMUNTLFVBQVUrQixPQUFPLFNBQVEsSUFJNUNSLEVBQVFuQixpQkFBaUIsU0FBUyxLQUM5QixFQUFLSixVQUFVK0IsT0FBTyxhQUN0QlAsRUFBU3hCLFVBQVVDLElBQUksVUFBVSxJQUlyQ3dCLEVBQVFyQixpQkFBaUIsU0FBUyxLQUM5QnNCLEVBQVkxQixVQUFVckIsT0FBTyxXQUU3QjZDLEVBQVN4QixVQUFVQyxJQUFJLFVBQVUsSUFHckMwQixFQUFXdkIsaUJBQWlCLFNBQVMsS0FDakNvQixFQUFTeEIsVUFBVXJCLE9BQU8sV0FDMUIrQyxFQUFZMUIsVUFBVUMsSUFBSSxVQUFVLElBSXhDMkIsRUFBU3hCLGlCQUFpQixTQUFTLEtBQy9Cc0IsRUFBWTFCLFVBQVVyQixPQUFPLFdBQzdCNkMsRUFBU3hCLFVBQVVyQixPQUFPLFdBQzFCLEVBQUtxQixVQUFVckIsT0FBTyxZQUFZLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvLW9kaW4vLi9zcmMvbWFuaXBzLmpzIiwid2VicGFjazovL3RvZG8tb2Rpbi8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTVE9SRVMgRE9NIE1BTklQVUxBVElPTlNcbi8vIChET05FKUFkZCBQcm9qZWN0LCBSZW1vdmUgUHJvamVjdFxuLy8gKERPTkUpVXBkYXRlIG51bWJlciBvZiB0YXNrcyBpbiBhIHByb2plY3Rcbi8vIChET05FKVVwZGF0ZSBPcHRpb25zIGluIEZvcm0gd2l0aCBuZXcgcHJvamVjdHNcbi8vIChET05FKVVwZGF0ZSBWaWV3IEFsbCBUYXNrcyBMaXN0IFxuLy8gKERPTkUpQWRkIFRvLWRvLCBSZW1vdmUgVG8tZG9cbi8vIChET05FKWNsZWFyIHRvLWRvcz9cblxuLy8gU2hvdyBBZGQgTmV3IEZvcm1cbi8vIFRhYiBiZXR3ZWVuIHRvLWRvIGFuZCBQcm9qZWN0IGZvcm1cbi8vIE1hcmsgVG8tZG8gYXMgY29tcGxldGVkXG4vLyBMaXN0IFRvLWRvcyBhbmQgUHJvamVjdHMgaW4gbGV2ZWwgb2YgcHJpb3JpdHk/XG5cblxuY29uc3QgRE9NSGFuZGxlciA9ICgoKSA9PiB7XG5cbiAgICAvLyBUTy1ETyBNQU5JUFNcblxuICAgIGNvbnN0IHRvZG8gPSAoKCkgPT4ge1xuICAgICAgICBsZXQgdGFibGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCd0YWJsZSB0Ym9keScpO1xuXG4gICAgICAgIGNvbnN0IGNsZWFyQWxsID0gKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgbmV3Qm9keSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3Rib2R5Jyk7XG4gICAgICAgICAgICB0YWJsZS5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChuZXdCb2R5LCB0YWJsZSk7XG4gICAgICAgICAgICAvLyB0aGUgbm9kZSB0aGF0IHVzZWQgdG8gYmUgdGFibGUgaXMgbm93IGdvbmUuXG4gICAgICAgICAgICAvLyByZWZyZXNoIGl0XG4gICAgICAgICAgICB0YWJsZSA9IG5ld0JvZHk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmVmcmVzaEFsbCA9IHRvZG9BcnJheSA9PiB7XG4gICAgICAgICAgICBjbGVhckFsbCgpO1xuICAgICAgICAgICAgdG9kb0FycmF5LmZvckVhY2godG9kb09iamVjdCA9PiB7XG4gICAgICAgICAgICAgICAgLy8gZGVzdHJ1Y3R1cmUgdGhlIG9iamVjdCBhbmQgSUlGRSBpdCBpbnRvIGFkZFxuICAgICAgICAgICAgICAgICgoe2lkLCB0aXRsZSwgZHVlRGF0ZSwgcHJvamVjdE5hbWV9KSA9PiBcbiAgICAgICAgICAgICAgICBhZGQoaWQsIHRpdGxlLCBkdWVEYXRlLCBwcm9qZWN0TmFtZSkpKHRvZG9PYmplY3QpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBhZGQgPSAoaWQsIHRpdGxlLCBkdWVEYXRlLCBwcm9qZWN0TmFtZSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgbmV3Um93ID0gdGFibGUuaW5zZXJ0Um93KCk7XG4gICAgICAgICAgICBuZXdSb3cuZGF0YXNldC5udW0gPSBpZDtcblxuICAgICAgICAgICAgY29uc3QgbmV3Q2hrID0gbmV3Um93Lmluc2VydENlbGwoMCk7XG4gICAgICAgICAgICBjb25zdCBDaGtJbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICAgICAgICBDaGtJbi50eXBlID0gJ2NoZWNrYm94JztcbiAgICAgICAgICAgIENoa0luLmRhdGFzZXQubnVtID0gaWQ7XG4gICAgICAgICAgICBuZXdDaGsuYXBwZW5kKENoa0luKTtcblxuICAgICAgICAgICAgY29uc3QgbmV3VGl0bGUgPSBuZXdSb3cuaW5zZXJ0Q2VsbCgxKTtcbiAgICAgICAgICAgIG5ld1RpdGxlLnRleHRDb250ZW50ID0gdGl0bGU7XG5cbiAgICAgICAgICAgIGNvbnN0IG5ld0RhdGUgPSBuZXdSb3cuaW5zZXJ0Q2VsbCgyKTtcbiAgICAgICAgICAgIG5ld0RhdGUudGV4dENvbnRlbnQgPSBkdWVEYXRlO1xuXG4gICAgICAgICAgICBjb25zdCBuZXdQcm9qZWN0ID0gbmV3Um93Lmluc2VydENlbGwoMyk7XG4gICAgICAgICAgICBuZXdQcm9qZWN0LnRleHRDb250ZW50ID0gcHJvamVjdE5hbWU7XG5cbiAgICAgICAgICAgIGNvbnN0IG5ld0VkaXQgPSBuZXdSb3cuaW5zZXJ0Q2VsbCg0KTtcbiAgICAgICAgICAgIGNvbnN0IEVkaXRCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICAgICAgICAgIEVkaXRCdG4uZGF0YXNldC5udW0gPSBpZDtcbiAgICAgICAgICAgIEVkaXRCdG4uY2xhc3NMaXN0LmFkZCgnZWRpdCcpO1xuICAgICAgICAgICAgRWRpdEJ0bi50ZXh0Q29udGVudCA9IFwiRWRpdFwiO1xuICAgICAgICAgICAgLy8gRWRpdCBFdmVudCBMaXN0ZW5lclxuICAgICAgICAgICAgbmV3RWRpdC5hcHBlbmQoRWRpdEJ0bik7XG5cblxuICAgICAgICAgICAgY29uc3QgbmV3Um12ID0gbmV3Um93Lmluc2VydENlbGwoNSk7XG4gICAgICAgICAgICBjb25zdCBSbXZCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICAgICAgICAgIFJtdkJ0bi5kYXRhc2V0Lm51bSA9IGlkO1xuICAgICAgICAgICAgUm12QnRuLmNsYXNzTGlzdC5hZGQoJ3JtdicpO1xuICAgICAgICAgICAgUm12QnRuLnRleHRDb250ZW50ID0gXCJSZW1vdmVcIjtcbiAgICAgICAgICAgIC8vIFRoaXMgc2hvdWxkIE5PVCBkaXJlY3RseSBjYWxsIHRoZSBET00gTWFuaXAuIE90aGVyd2lzZVxuICAgICAgICAgICAgLy8gdGhlIHVuZGVybHlpbmcgVG8tZG8gb2JqZWN0IHdpbGwgbm90IGJlIGRlbGV0ZWQhXG4gICAgICAgICAgICBSbXZCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiByZW1vdmUoaWQpKTtcblxuICAgICAgICAgICAgbmV3Um12LmFwcGVuZChSbXZCdG4pO1xuXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHJlbW92ZSA9IGlkID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHJvd1RvUmVtb3ZlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgdHJbZGF0YS1udW09JyR7aWR9J11gKTtcbiAgICAgICAgICAgIHJvd1RvUmVtb3ZlLnJlbW92ZSgpO1xuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiB7Y2xlYXJBbGwsIHJlZnJlc2hBbGwsIHJlbW92ZX07XG5cbiAgICB9KSgpO1xuXG4gICAgLy8gUFJPSkVDVCBNQU5JUFNcblxuICAgIGNvbnN0IHVwZGF0ZVZpZXdBbGwgPSB0YXNrcyA9PiB7XG4gICAgICAgIGNvbnN0IHZpZXdBbGxOdW1iZXJEaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdmlldy1hbGwgLnByb2plY3Qtbm8nKTtcbiAgICAgICAgdmlld0FsbE51bWJlckRpdi50ZXh0Q29udGVudCA9IHRhc2tzO1xuICAgIH1cblxuICAgIGNvbnN0IHByb2plY3QgPSAoKCkgPT4ge1xuICAgICAgICBjb25zdCBwcm9qZWN0c0xpc3RFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2plY3RzLWxpc3QnKTtcbiAgICBcbiAgICAgICAgY29uc3QgYWRkID0gKGlkLCBuYW1lLCB0YXNrcyA9IDApID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG5ld0l0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuICAgICAgICAgICAgY29uc3QgbmV3QnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgICAgICAgICBjb25zdCBuZXdEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBcbiAgICAgICAgICAgIC8vIElEIGdlbmVyYXRpb24gc2hvdWxkIGJlIGhhbmRsZWQgaW4gbG9naWMuIFxuICAgICAgICAgICAgbmV3SXRlbS5pZCA9IGBwcm9qZWN0LSR7aWR9YDtcbiAgICAgICAgICAgIGZvcm0uYWRkUHJvamVjdChpZCwgbmFtZSk7XG4gICAgXG4gICAgICAgICAgICBuZXdEaXYuY2xhc3NMaXN0LmFkZCgncHJvamVjdC1ubycpO1xuICAgICAgICAgICAgbmV3QnRuLmNsYXNzTGlzdC5hZGQoJ3Byb2plY3QnKTtcbiAgICAgICAgICAgIG5ld0l0ZW0uY2xhc3NMaXN0LmFkZCgncHJvamVjdCcpO1xuICAgIFxuICAgICAgICAgICAgbmV3RGl2LnRleHRDb250ZW50ID0gdGFza3M7XG4gICAgICAgICAgICBuZXdCdG4udGV4dENvbnRlbnQgPSBuYW1lO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBuZXdCdG4uYXBwZW5kKG5ld0Rpdik7XG4gICAgICAgICAgICBuZXdJdGVtLmFwcGVuZChuZXdCdG4pO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBwcm9qZWN0c0xpc3RFbGVtZW50LmFwcGVuZChuZXdJdGVtKTtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgcmVtb3ZlID0gaWQgPT4ge1xuICAgICAgICAgICAgY29uc3QgaXRlbVRvUmVtb3ZlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3Byb2plY3QtJHtpZH1gKTtcbiAgICAgICAgICAgIGl0ZW1Ub1JlbW92ZS5yZW1vdmUoKTtcbiAgICAgICAgICAgIGZvcm0ucmVtb3ZlUHJvamVjdChpZCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdXBkYXRlID0gKGlkLCB0YXNrcykgPT4ge1xuICAgICAgICAgICAgY29uc3QgbnVtYmVyRGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3Byb2plY3QtJHtpZH0gLnByb2plY3Qtbm9gKTtcbiAgICAgICAgICAgIG51bWJlckRpdi50ZXh0Q29udGVudCA9IHRhc2tzO1xuICAgICAgICAgICAgXG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLy8gSSBhbSBub3Qgc3VyZSBpZiB0aGlzIGlzIHVzZWZ1bCBvciBjb3JyZWN0LlxuICAgICAgICBjb25zdCBfdXBkYXRlTmFtZSA9IChpZCwgbmFtZSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgbmFtZUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNwcm9qZWN0LSR7aWR9IGJ1dHRvbmApO1xuICAgICAgICAgICAgY29uc3QgbnVtYmVyRGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3Byb2plY3QtJHtpZH0gLnByb2plY3Qtbm9gKTtcbiAgICAgICAgICAgIG5hbWVCdG4udGV4dENvbnRlbnQgPSBuYW1lO1xuICAgICAgICAgICAgbmFtZUJ0bi5hcHBlbmQobnVtYmVyRGl2KTtcbiAgICAgICAgICAgIC8vIGZvcm1NYW5pcHMuYWRkUHJvamVjdChpZCwgbmFtZSk7XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgcmV0dXJuIHthZGQsIHJlbW92ZSwgdXBkYXRlLCB1cGRhdGVWaWV3QWxsfVxuICAgIH0pKCk7XG4gICAgXG4gICAgLy8gRk9STSBNQU5JUFNcbiAgICBcbiAgICBjb25zdCBmb3JtID0gKCgpID0+IHtcbiAgICAgICAgY29uc3QgcHJvamVjdE9wdGlvbnNMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3RkLXByb2plY3QtaW5wdXQnKTtcbiAgICBcbiAgICBcbiAgICAgICAgY29uc3QgYWRkUHJvamVjdCA9IChpZCwgbmFtZSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgbmV3T3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gICAgICAgICAgICBuZXdPcHRpb24udmFsdWUgPSBgcHJvamVjdC0ke2lkfWA7XG4gICAgICAgICAgICBuZXdPcHRpb24udGV4dENvbnRlbnQgPSBuYW1lO1xuICAgICAgICAgICAgcHJvamVjdE9wdGlvbnNMaXN0LmFwcGVuZChuZXdPcHRpb24pO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlbW92ZVByb2plY3QgPSBpZCA9PiB7XG4gICAgICAgICAgICBjb25zdCBvcHRpb25Ub1JlbW92ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYG9wdGlvblt2YWx1ZT0ncHJvamVjdC0ke2lkfSddYCk7XG4gICAgICAgICAgICBvcHRpb25Ub1JlbW92ZS5yZW1vdmUoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge2FkZFByb2plY3QsIHJlbW92ZVByb2plY3R9O1xuICAgIH0pKCk7XG5cblxuXG5cbiAgICByZXR1cm4ge3RvZG8sIHVwZGF0ZVZpZXdBbGwsIHByb2plY3QsIGZvcm19O1xuXG59KSgpO1xuXG5cblxuXG5cblxuXG5cblxuXG5leHBvcnQge0RPTUhhbmRsZXJ9OyIsImltcG9ydCAnLi9zdHlsZS5jc3MnO1xuaW1wb3J0IHsgRE9NSGFuZGxlcn0gZnJvbSAnLi9tYW5pcHMnO1xuXG5cbi8vIElNUE9SVFMgVEVTVElOR1xuXG5ET01IYW5kbGVyLnByb2plY3QuYWRkKDEsICdKb2duMScsIDEwMDApO1xuRE9NSGFuZGxlci5wcm9qZWN0LmFkZCgyLCAnSm9nbjInLCAxMDAwKTtcbkRPTUhhbmRsZXIucHJvamVjdC5hZGQoMywgJ0pvZ24zJywgMTAwMCk7XG5ET01IYW5kbGVyLnByb2plY3QuYWRkKDQsICdKb2duNCcsIDEwMDApO1xuRE9NSGFuZGxlci5wcm9qZWN0LmFkZCg1LCAnSm9nbjUnLCAxMDAwKTtcbkRPTUhhbmRsZXIucHJvamVjdC5hZGQoNiwgJ0pvZ242JywgMTAwMCk7XG5cbkRPTUhhbmRsZXIucHJvamVjdC5hZGQoNywgJ25vbnVtYmVyJyk7XG5ET01IYW5kbGVyLnByb2plY3QuYWRkKDgsICdibGFibGFibGEnKTtcblxuRE9NSGFuZGxlci5wcm9qZWN0LnJlbW92ZSg1KTtcbkRPTUhhbmRsZXIucHJvamVjdC5yZW1vdmUoMSk7XG5cbkRPTUhhbmRsZXIucHJvamVjdC51cGRhdGUoNiwgMjIpO1xuRE9NSGFuZGxlci5wcm9qZWN0LnVwZGF0ZSgzLCAyMDAwKTtcblxuRE9NSGFuZGxlci51cGRhdGVWaWV3QWxsKDIyKTtcblxuY29uc3QgdG9kb01ha2VyID0gKChpZCwgdGl0bGUsIGR1ZURhdGUsIHByb2plY3ROYW1lLCBwcmlvcml0eSkgPT4ge3JldHVybiB7aWQsIHRpdGxlLCBkdWVEYXRlLCBwcm9qZWN0TmFtZSwgcHJpb3JpdHl9fSk7XG5cbmxldCB0b2RvTGlzdCA9IFsgXG4gICAgdG9kb01ha2VyKDEsJ2hlbGxvJywnMC8wOS8yMDIwJywnZ29kb2UnLCA1KSxcbiAgICB0b2RvTWFrZXIoMiwnaGVsbG8yJywnMC8wOS8yMDIwJywnZ29kb2UnLCA1KSxcbiAgICB0b2RvTWFrZXIoMywnaGVsbG8zJywnMC8wOS8yMDIwJywnZ29kb2UnLCA1KSxcbiAgICB0b2RvTWFrZXIoNCwnaGVsbG80JywnMC8wOS8yMzMwMjAnLCdnbzRkb2UnLCAyKSxcbiAgICB0b2RvTWFrZXIoNSwnaGVsbG81JywnMC8wOS8yMDIwJywnZ29kb2UnLCAxKSxcbl07XG5cbkRPTUhhbmRsZXIudG9kby5yZWZyZXNoQWxsKHRvZG9MaXN0KTtcblxuRE9NSGFuZGxlci50b2RvLnJlbW92ZSgzKTtcblxuLy8gRE9NSGFuZGxlci50b2RvLmNsZWFyQWxsKCk7XG5cblxuXG5cblxuXG5jb25zdCBhZGRfbmV3ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFkZC1uZXctYnV0dG9uJyk7XG5jb25zdCBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZvcm0tc2VjdGlvbicpO1xuXG5jb25zdCBmb3JtdG9kbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGQtdG9kbycpO1xuY29uc3QgdG9kb2J0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0by1kby10YWInKTtcbmNvbnN0IGZvcm1wcm9qZWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFkZC1wcm9qZWN0Jyk7XG5jb25zdCBwcm9qZWN0YnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Byb2plY3QtdGFiJyk7XG5jb25zdCBjbG9zZWJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjbG9zZS10YWInKTtcblxuXG5jb25zdCBjaGVja3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCd0ciBpbnB1dCcpO1xuLy8gQ0hBTkdFIFRPRE8gVE8gRE9ORSBBTkQgRElTUExBWSBJVCBESUZGRVJFTlRMWVxuY2hlY2tzLmZvckVhY2goY2hrID0+IHtcbiAgICBjaGsuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgXG4gICAgKCkgPT4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgdHJbZGF0YS1udW09JyR7Y2hrLmRhdGFzZXQubnVtfSddYClcbiAgICAgICAgICAgICAgICAgIC5jbGFzc0xpc3QudG9nZ2xlKCdkb25lJykpO1xufSk7XG5cbi8vIE9QRU4gVEhFIEFERCBGT1JNXG5hZGRfbmV3LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgZm9ybS5jbGFzc0xpc3QudG9nZ2xlKCdmb3JtLW9wZW4nKVxuICAgIGZvcm10b2RvLmNsYXNzTGlzdC5hZGQoJ2N1cnJlbnQnKTtcbn0pO1xuXG4vLyBUT0dHTEUgQkVUV0VFTiBUT0RPIEFORCBQUk9KRUNUIEZPUk1TXG50b2RvYnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgZm9ybXByb2plY3QuY2xhc3NMaXN0LnJlbW92ZShcImN1cnJlbnRcIik7XG4gICAgXG4gICAgZm9ybXRvZG8uY2xhc3NMaXN0LmFkZChcImN1cnJlbnRcIik7XG4gICAgXG59KTtcbnByb2plY3RidG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBmb3JtdG9kby5jbGFzc0xpc3QucmVtb3ZlKFwiY3VycmVudFwiKTtcbiAgICBmb3JtcHJvamVjdC5jbGFzc0xpc3QuYWRkKFwiY3VycmVudFwiKTtcbiAgICBcbn0pO1xuLy8gQ0xPU0UgVEhFIEFERCBGT1JNIFdJVEhPVVQgU1VCTUlUVElOR1xuY2xvc2VidG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBmb3JtcHJvamVjdC5jbGFzc0xpc3QucmVtb3ZlKCdjdXJyZW50Jyk7XG4gICAgZm9ybXRvZG8uY2xhc3NMaXN0LnJlbW92ZSgnY3VycmVudCcpO1xuICAgIGZvcm0uY2xhc3NMaXN0LnJlbW92ZSgnZm9ybS1vcGVuJyk7XG4gICAgXG4gICAgXG59KTsiXSwibmFtZXMiOlsiRE9NSGFuZGxlciIsInRvZG8iLCJ0YWJsZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNsZWFyQWxsIiwibmV3Qm9keSIsImNyZWF0ZUVsZW1lbnQiLCJwYXJlbnROb2RlIiwicmVwbGFjZUNoaWxkIiwicmVtb3ZlIiwiaWQiLCJyZWZyZXNoQWxsIiwidG9kb0FycmF5IiwiZm9yRWFjaCIsInRvZG9PYmplY3QiLCJ0aXRsZSIsImR1ZURhdGUiLCJwcm9qZWN0TmFtZSIsIm5ld1JvdyIsImluc2VydFJvdyIsImRhdGFzZXQiLCJudW0iLCJuZXdDaGsiLCJpbnNlcnRDZWxsIiwiQ2hrSW4iLCJ0eXBlIiwiYXBwZW5kIiwidGV4dENvbnRlbnQiLCJuZXdFZGl0IiwiRWRpdEJ0biIsImNsYXNzTGlzdCIsImFkZCIsIm5ld1JtdiIsIlJtdkJ0biIsImFkZEV2ZW50TGlzdGVuZXIiLCJ1cGRhdGVWaWV3QWxsIiwidGFza3MiLCJwcm9qZWN0IiwicHJvamVjdHNMaXN0RWxlbWVudCIsIm5hbWUiLCJuZXdJdGVtIiwibmV3QnRuIiwibmV3RGl2IiwiZm9ybSIsImFkZFByb2plY3QiLCJyZW1vdmVQcm9qZWN0IiwidXBkYXRlIiwicHJvamVjdE9wdGlvbnNMaXN0IiwibmV3T3B0aW9uIiwidmFsdWUiLCJ0b2RvTWFrZXIiLCJwcmlvcml0eSIsInRvZG9MaXN0IiwiYWRkX25ldyIsImZvcm10b2RvIiwidG9kb2J0biIsImZvcm1wcm9qZWN0IiwicHJvamVjdGJ0biIsImNsb3NlYnRuIiwicXVlcnlTZWxlY3RvckFsbCIsImNoayIsInRvZ2dsZSJdLCJzb3VyY2VSb290IjoiIn0=