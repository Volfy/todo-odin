(()=>{"use strict";const e=(()=>{const e=(()=>{let e=document.querySelector("table tbody");return{refreshAll:t=>{(()=>{const t=document.createElement("tbody");e.parentNode.replaceChild(t,e),e=t})(),t.forEach((t=>{(({id:t,title:o,dueDate:r,projectName:c})=>{((t,o,r,c)=>{const n=e.insertRow();n.dataset.num=t;const d=n.insertCell(0),l=document.createElement("input");l.type="checkbox",l.addEventListener("change",(()=>{(e=>{document.querySelector(`tr[data-num='${e}']`).classList.toggle("done")})(t)})),d.append(l),n.insertCell(1).textContent=o,n.insertCell(2).textContent=r,n.insertCell(3).textContent=c;const a=n.insertCell(4),s=document.createElement("button");s.dataset.num=t,s.classList.add("edit"),s.textContent="Edit",a.append(s);const u=n.insertCell(5),p=document.createElement("button");p.dataset.num=t,p.classList.add("rmv"),p.textContent="Remove",u.append(p)})(t,o,r,c)})(t)}))}}})(),t=e=>{document.querySelector("#view-all .project-no").textContent=e},o=(()=>{const e=document.querySelector(".projects-list");return{add:(t,o,c=0)=>{const n=document.createElement("li"),d=document.createElement("button"),l=document.createElement("div");n.id=`project-${t}`,r.addProject(t,o),l.classList.add("project-no"),d.classList.add("project"),n.classList.add("project"),l.textContent=c,d.textContent=o,d.append(l),n.append(d),e.append(n)},remove:e=>{document.querySelector(`#project-${e}`).remove(),r.removeProject(e)},update:(e,t)=>{document.querySelector(`#project-${e} .project-no`).textContent=t},updateViewAll:t}})(),r=(()=>{const e=document.querySelector("#td-project-input");return{addProject:(t,o)=>{const r=document.createElement("option");r.value=`project-${t}`,r.textContent=o,e.append(r)},removeProject:e=>{document.querySelector(`option[value='project-${e}']`).remove()}}})();return{todo:e,updateViewAll:t,project:o,form:r}})();e.project.add(1,"Jogn1",1e3),e.project.add(2,"Jogn2",1e3),e.project.add(3,"Jogn3",1e3),e.project.add(4,"Jogn4",1e3),e.project.add(5,"Jogn5",1e3),e.project.add(6,"Jogn6",1e3),e.project.add(7,"nonumber"),e.project.add(8,"blablabla"),e.project.remove(5),e.project.remove(1),e.project.update(6,22),e.project.update(3,2e3),e.updateViewAll(22);const t=(e,t,o,r,c)=>({id:e,title:t,dueDate:o,projectName:r,priority:c});let o=[t(1,"hello","0/09/2020","godoe",5),t(2,"hello2","0/09/2020","godoe",5),t(3,"hello3","0/09/2020","godoe",5),t(4,"hello4","0/09/233020","go4doe",2),t(5,"hello5","0/09/2020","godoe",1)];e.todo.refreshAll(o);const r=document.querySelector(".add-new-button"),c=document.querySelector(".form-section"),n=document.querySelector(".add-todo"),d=document.querySelector("#to-do-tab"),l=document.querySelector(".add-project"),a=document.querySelector("#project-tab"),s=document.querySelector("#close-tab");r.addEventListener("click",(()=>{c.classList.toggle("form-open"),n.classList.add("current")})),d.addEventListener("click",(()=>{l.classList.remove("current"),n.classList.add("current")})),a.addEventListener("click",(()=>{n.classList.remove("current"),l.classList.add("current")})),s.addEventListener("click",(()=>{l.classList.remove("current"),n.classList.remove("current"),c.classList.remove("form-open")}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q3NELEVBQVV2RCxTQUFTQyxjQUFjLGNBQ2pDdUQsRUFBY3hELFNBQVNDLGNBQWMsZ0JBQ3JDd0QsRUFBYXpELFNBQVNDLGNBQWMsZ0JBQ3BDeUQsRUFBVzFELFNBQVNDLGNBQWMsY0FNeENvRCxFQUFROUIsaUJBQWlCLFNBQVMsS0FDOUIsRUFBS0MsVUFBVUMsT0FBTyxhQUN0QjZCLEVBQVM5QixVQUFVTyxJQUFJLFVBQVUsSUFJckN3QixFQUFRaEMsaUJBQWlCLFNBQVMsS0FDOUJpQyxFQUFZaEMsVUFBVW9CLE9BQU8sV0FFN0JVLEVBQVM5QixVQUFVTyxJQUFJLFVBQVUsSUFHckMwQixFQUFXbEMsaUJBQWlCLFNBQVMsS0FDakMrQixFQUFTOUIsVUFBVW9CLE9BQU8sV0FDMUJZLEVBQVloQyxVQUFVTyxJQUFJLFVBQVUsSUFJeEMyQixFQUFTbkMsaUJBQWlCLFNBQVMsS0FDL0JpQyxFQUFZaEMsVUFBVW9CLE9BQU8sV0FDN0JVLEVBQVM5QixVQUFVb0IsT0FBTyxXQUMxQixFQUFLcEIsVUFBVW9CLE9BQU8sWUFBWSxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kby1vZGluLy4vc3JjL21hbmlwcy5qcyIsIndlYnBhY2s6Ly90b2RvLW9kaW4vLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU1RPUkVTIERPTSBNQU5JUFVMQVRJT05TXG4vLyAoRE9ORSlBZGQgUHJvamVjdCwgUmVtb3ZlIFByb2plY3Rcbi8vIChET05FKVVwZGF0ZSBudW1iZXIgb2YgdGFza3MgaW4gYSBwcm9qZWN0XG4vLyAoRE9ORSlVcGRhdGUgT3B0aW9ucyBpbiBGb3JtIHdpdGggbmV3IHByb2plY3RzXG4vLyAoRE9ORSlVcGRhdGUgVmlldyBBbGwgVGFza3MgTGlzdCBcbi8vIChET05FKUFkZCBUby1kbywgUmVtb3ZlIFRvLWRvXG4vLyAoRE9ORSljbGVhciB0by1kb3M/XG4vLyAoRE9ORSlNYXJrIFRvLWRvIGFzIGNvbXBsZXRlZFxuXG4vLyBQcm9qZWN0cyAtIHJlZnJlc2hBbGwgZXF1aXZhbGVudFxuLy8gU2hvdyBBZGQgTmV3IEZvcm1cbi8vIFRhYiBiZXR3ZWVuIHRvLWRvIGFuZCBQcm9qZWN0IGZvcm1cbi8vIExpc3QgVG8tZG9zIGFuZCBQcm9qZWN0cyBpbiBsZXZlbCBvZiBwcmlvcml0eT9cblxuXG5jb25zdCBET01IYW5kbGVyID0gKCgpID0+IHtcblxuICAgIC8vIFRPLURPIE1BTklQU1xuXG4gICAgY29uc3QgdG9kbyA9ICgoKSA9PiB7XG4gICAgICAgIGxldCB0YWJsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ3RhYmxlIHRib2R5Jyk7XG5cbiAgICAgICAgY29uc3QgcmVmcmVzaEFsbCA9IHRvZG9BcnJheSA9PiB7XG4gICAgICAgICAgICBjbGVhckFsbCgpO1xuICAgICAgICAgICAgdG9kb0FycmF5LmZvckVhY2godG9kb09iamVjdCA9PiB7XG4gICAgICAgICAgICAgICAgLy8gZGVzdHJ1Y3R1cmUgdGhlIG9iamVjdCBhbmQgSUlGRSBpdCBpbnRvIGFkZFxuICAgICAgICAgICAgICAgICgoe2lkLCB0aXRsZSwgZHVlRGF0ZSwgcHJvamVjdE5hbWV9KSA9PiBcbiAgICAgICAgICAgICAgICBhZGQoaWQsIHRpdGxlLCBkdWVEYXRlLCBwcm9qZWN0TmFtZSkpKHRvZG9PYmplY3QpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBtYXJrRG9uZSA9IChpZCkgPT4gXG4gICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGB0cltkYXRhLW51bT0nJHtpZH0nXWApXG4gICAgICAgICAgICAgICAgICAgIC5jbGFzc0xpc3RcbiAgICAgICAgICAgICAgICAgICAgLnRvZ2dsZSgnZG9uZScpO1xuXG4gICAgICAgIGNvbnN0IGNsZWFyQWxsID0gKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgbmV3Qm9keSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3Rib2R5Jyk7XG4gICAgICAgICAgICB0YWJsZS5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChuZXdCb2R5LCB0YWJsZSk7XG4gICAgICAgICAgICAvLyB0aGUgbm9kZSB0aGF0IHVzZWQgdG8gYmUgdGFibGUgaXMgbm93IGdvbmUuXG4gICAgICAgICAgICAvLyBzbyByZWZyZXNoIGl0XG4gICAgICAgICAgICB0YWJsZSA9IG5ld0JvZHk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBhZGQgPSAoaWQsIHRpdGxlLCBkdWVEYXRlLCBwcm9qZWN0TmFtZSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgbmV3Um93ID0gdGFibGUuaW5zZXJ0Um93KCk7XG4gICAgICAgICAgICBuZXdSb3cuZGF0YXNldC5udW0gPSBpZDtcblxuICAgICAgICAgICAgY29uc3QgbmV3Q2hrID0gbmV3Um93Lmluc2VydENlbGwoMCk7XG4gICAgICAgICAgICBjb25zdCBDaGtJbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICAgICAgICBDaGtJbi50eXBlID0gJ2NoZWNrYm94JztcbiAgICAgICAgICAgIC8vIENoZWNrYm94IEV2ZW50IExpc3RlbmVyXG4gICAgICAgICAgICAvLyBUaGlzIHNob3VsZCBub3QgaGFwcGVuIGRpcmVjdGx5LFxuICAgICAgICAgICAgLy8gYnV0IG1hcmtEb25lIHNob3VsZCBnZXQgY2FsbGVkIGJ5IGEgZnVuY3Rpb25cbiAgICAgICAgICAgIC8vIGFmdGVyIG9iamVjdCBzdGF0ZSBpcyBjaGFuZ2VkIFxuICAgICAgICAgICAgQ2hrSW4uYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIG1hcmtEb25lKGlkKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBuZXdDaGsuYXBwZW5kKENoa0luKTtcblxuICAgICAgICAgICAgY29uc3QgbmV3VGl0bGUgPSBuZXdSb3cuaW5zZXJ0Q2VsbCgxKTtcbiAgICAgICAgICAgIG5ld1RpdGxlLnRleHRDb250ZW50ID0gdGl0bGU7XG5cbiAgICAgICAgICAgIGNvbnN0IG5ld0RhdGUgPSBuZXdSb3cuaW5zZXJ0Q2VsbCgyKTtcbiAgICAgICAgICAgIG5ld0RhdGUudGV4dENvbnRlbnQgPSBkdWVEYXRlO1xuXG4gICAgICAgICAgICBjb25zdCBuZXdQcm9qZWN0ID0gbmV3Um93Lmluc2VydENlbGwoMyk7XG4gICAgICAgICAgICBuZXdQcm9qZWN0LnRleHRDb250ZW50ID0gcHJvamVjdE5hbWU7XG5cbiAgICAgICAgICAgIGNvbnN0IG5ld0VkaXQgPSBuZXdSb3cuaW5zZXJ0Q2VsbCg0KTtcbiAgICAgICAgICAgIGNvbnN0IEVkaXRCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICAgICAgICAgIEVkaXRCdG4uZGF0YXNldC5udW0gPSBpZDsgLy8gbWF5IG5vdCBldmVuIGJlIHJlbGV2YW50XG4gICAgICAgICAgICBFZGl0QnRuLmNsYXNzTGlzdC5hZGQoJ2VkaXQnKTtcbiAgICAgICAgICAgIEVkaXRCdG4udGV4dENvbnRlbnQgPSBcIkVkaXRcIjtcbiAgICAgICAgICAgIC8vIEVkaXQgRXZlbnQgTGlzdGVuZXJcbiAgICAgICAgICAgIG5ld0VkaXQuYXBwZW5kKEVkaXRCdG4pO1xuXG5cbiAgICAgICAgICAgIGNvbnN0IG5ld1JtdiA9IG5ld1Jvdy5pbnNlcnRDZWxsKDUpO1xuICAgICAgICAgICAgY29uc3QgUm12QnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgICAgICAgICBSbXZCdG4uZGF0YXNldC5udW0gPSBpZDsgLy8gbWF5IG5vdCBldmVuIGJlIHJlbGV2YW50XG4gICAgICAgICAgICBSbXZCdG4uY2xhc3NMaXN0LmFkZCgncm12Jyk7XG4gICAgICAgICAgICBSbXZCdG4udGV4dENvbnRlbnQgPSBcIlJlbW92ZVwiO1xuICAgICAgICAgICAgLy8gUmVtb3ZlIEV2ZW50IExpc3RlbmVyXG4gICAgICAgICAgICAvLyBUaGlzIHNob3VsZCBOT1QgZGlyZWN0bHkgY2FsbCB0aGUgRE9NIE1hbmlwLiBPdGhlcndpc2VcbiAgICAgICAgICAgIC8vIHRoZSB1bmRlcmx5aW5nIFRvLWRvIG9iamVjdCB3aWxsIG5vdCBiZSBkZWxldGVkIVxuICAgICAgICAgICAgLy8gUm12QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gcmVtb3ZlKGlkKSk7XG5cbiAgICAgICAgICAgIG5ld1Jtdi5hcHBlbmQoUm12QnRuKTtcblxuICAgICAgICB9O1xuICAgICAgICAvLyBOb3QgbmVjZXNzYXJ5LlxuICAgICAgICBjb25zdCBfcmVtb3ZlID0gaWQgPT4ge1xuICAgICAgICAgICAgY29uc3Qgcm93VG9SZW1vdmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGB0cltkYXRhLW51bT0nJHtpZH0nXWApO1xuICAgICAgICAgICAgcm93VG9SZW1vdmUucmVtb3ZlKCk7XG4gICAgICAgIH07XG5cbiAgICAgICAgLy8gQWRkaW5nL1JlbW92aW5nIFRvLWRvcyBmcm9tIERPTSBpcyB1bm5lY2Vzc2FyeS5cbiAgICAgICAgLy8gV2UgY2FuIHNpbXBseSByZWZyZXNoQWxsLlxuICAgICAgICByZXR1cm4ge3JlZnJlc2hBbGx9O1xuXG4gICAgfSkoKTtcblxuICAgIC8vIFBST0pFQ1QgTUFOSVBTXG5cbiAgICBjb25zdCB1cGRhdGVWaWV3QWxsID0gdGFza3MgPT4ge1xuICAgICAgICBjb25zdCB2aWV3QWxsTnVtYmVyRGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3ZpZXctYWxsIC5wcm9qZWN0LW5vJyk7XG4gICAgICAgIHZpZXdBbGxOdW1iZXJEaXYudGV4dENvbnRlbnQgPSB0YXNrcztcbiAgICB9XG5cbiAgICBjb25zdCBwcm9qZWN0ID0gKCgpID0+IHtcbiAgICAgICAgY29uc3QgcHJvamVjdHNMaXN0RWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9qZWN0cy1saXN0Jyk7XG4gICAgXG4gICAgICAgIGNvbnN0IGFkZCA9IChpZCwgbmFtZSwgdGFza3MgPSAwKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBuZXdJdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcbiAgICAgICAgICAgIGNvbnN0IG5ld0J0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgICAgICAgICAgY29uc3QgbmV3RGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgXG4gICAgICAgICAgICAvLyBJRCBnZW5lcmF0aW9uIHNob3VsZCBiZSBoYW5kbGVkIGluIGxvZ2ljLiBcbiAgICAgICAgICAgIG5ld0l0ZW0uaWQgPSBgcHJvamVjdC0ke2lkfWA7XG4gICAgICAgICAgICBmb3JtLmFkZFByb2plY3QoaWQsIG5hbWUpO1xuICAgIFxuICAgICAgICAgICAgbmV3RGl2LmNsYXNzTGlzdC5hZGQoJ3Byb2plY3Qtbm8nKTtcbiAgICAgICAgICAgIG5ld0J0bi5jbGFzc0xpc3QuYWRkKCdwcm9qZWN0Jyk7XG4gICAgICAgICAgICBuZXdJdGVtLmNsYXNzTGlzdC5hZGQoJ3Byb2plY3QnKTtcbiAgICBcbiAgICAgICAgICAgIG5ld0Rpdi50ZXh0Q29udGVudCA9IHRhc2tzO1xuICAgICAgICAgICAgbmV3QnRuLnRleHRDb250ZW50ID0gbmFtZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgbmV3QnRuLmFwcGVuZChuZXdEaXYpO1xuICAgICAgICAgICAgbmV3SXRlbS5hcHBlbmQobmV3QnRuKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgcHJvamVjdHNMaXN0RWxlbWVudC5hcHBlbmQobmV3SXRlbSk7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHJlbW92ZSA9IGlkID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGl0ZW1Ub1JlbW92ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNwcm9qZWN0LSR7aWR9YCk7XG4gICAgICAgICAgICBpdGVtVG9SZW1vdmUucmVtb3ZlKCk7XG4gICAgICAgICAgICBmb3JtLnJlbW92ZVByb2plY3QoaWQpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHVwZGF0ZSA9IChpZCwgdGFza3MpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG51bWJlckRpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNwcm9qZWN0LSR7aWR9IC5wcm9qZWN0LW5vYCk7XG4gICAgICAgICAgICBudW1iZXJEaXYudGV4dENvbnRlbnQgPSB0YXNrcztcbiAgICAgICAgICAgIFxuICAgICAgICB9XG4gICAgXG4gICAgICAgIC8vIEkgYW0gbm90IHN1cmUgaWYgdGhpcyBpcyB1c2VmdWwgb3IgY29ycmVjdC5cbiAgICAgICAgY29uc3QgX3VwZGF0ZU5hbWUgPSAoaWQsIG5hbWUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG5hbWVCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjcHJvamVjdC0ke2lkfSBidXR0b25gKTtcbiAgICAgICAgICAgIGNvbnN0IG51bWJlckRpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCNwcm9qZWN0LSR7aWR9IC5wcm9qZWN0LW5vYCk7XG4gICAgICAgICAgICBuYW1lQnRuLnRleHRDb250ZW50ID0gbmFtZTtcbiAgICAgICAgICAgIG5hbWVCdG4uYXBwZW5kKG51bWJlckRpdik7XG4gICAgICAgICAgICAvLyBmb3JtTWFuaXBzLmFkZFByb2plY3QoaWQsIG5hbWUpO1xuICAgICAgICB9XG4gICAgXG4gICAgICAgIHJldHVybiB7YWRkLCByZW1vdmUsIHVwZGF0ZSwgdXBkYXRlVmlld0FsbH1cbiAgICB9KSgpO1xuICAgIFxuICAgIC8vIEZPUk0gTUFOSVBTXG4gICAgXG4gICAgY29uc3QgZm9ybSA9ICgoKSA9PiB7XG4gICAgICAgIGNvbnN0IHByb2plY3RPcHRpb25zTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0ZC1wcm9qZWN0LWlucHV0Jyk7XG4gICAgXG4gICAgXG4gICAgICAgIGNvbnN0IGFkZFByb2plY3QgPSAoaWQsIG5hbWUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG5ld09wdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpO1xuICAgICAgICAgICAgbmV3T3B0aW9uLnZhbHVlID0gYHByb2plY3QtJHtpZH1gO1xuICAgICAgICAgICAgbmV3T3B0aW9uLnRleHRDb250ZW50ID0gbmFtZTtcbiAgICAgICAgICAgIHByb2plY3RPcHRpb25zTGlzdC5hcHBlbmQobmV3T3B0aW9uKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZW1vdmVQcm9qZWN0ID0gaWQgPT4ge1xuICAgICAgICAgICAgY29uc3Qgb3B0aW9uVG9SZW1vdmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBvcHRpb25bdmFsdWU9J3Byb2plY3QtJHtpZH0nXWApO1xuICAgICAgICAgICAgb3B0aW9uVG9SZW1vdmUucmVtb3ZlKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHthZGRQcm9qZWN0LCByZW1vdmVQcm9qZWN0fTtcbiAgICB9KSgpO1xuXG5cblxuXG4gICAgcmV0dXJuIHt0b2RvLCB1cGRhdGVWaWV3QWxsLCBwcm9qZWN0LCBmb3JtfTtcblxufSkoKTtcblxuXG5cblxuXG5cblxuXG5cblxuZXhwb3J0IHtET01IYW5kbGVyfTsiLCJpbXBvcnQgJy4vc3R5bGUuY3NzJztcbmltcG9ydCB7IERPTUhhbmRsZXJ9IGZyb20gJy4vbWFuaXBzJztcblxuXG4vLyBJTVBPUlRTIFRFU1RJTkdcblxuRE9NSGFuZGxlci5wcm9qZWN0LmFkZCgxLCAnSm9nbjEnLCAxMDAwKTtcbkRPTUhhbmRsZXIucHJvamVjdC5hZGQoMiwgJ0pvZ24yJywgMTAwMCk7XG5ET01IYW5kbGVyLnByb2plY3QuYWRkKDMsICdKb2duMycsIDEwMDApO1xuRE9NSGFuZGxlci5wcm9qZWN0LmFkZCg0LCAnSm9nbjQnLCAxMDAwKTtcbkRPTUhhbmRsZXIucHJvamVjdC5hZGQoNSwgJ0pvZ241JywgMTAwMCk7XG5ET01IYW5kbGVyLnByb2plY3QuYWRkKDYsICdKb2duNicsIDEwMDApO1xuXG5ET01IYW5kbGVyLnByb2plY3QuYWRkKDcsICdub251bWJlcicpO1xuRE9NSGFuZGxlci5wcm9qZWN0LmFkZCg4LCAnYmxhYmxhYmxhJyk7XG5cbkRPTUhhbmRsZXIucHJvamVjdC5yZW1vdmUoNSk7XG5ET01IYW5kbGVyLnByb2plY3QucmVtb3ZlKDEpO1xuXG5ET01IYW5kbGVyLnByb2plY3QudXBkYXRlKDYsIDIyKTtcbkRPTUhhbmRsZXIucHJvamVjdC51cGRhdGUoMywgMjAwMCk7XG5cbkRPTUhhbmRsZXIudXBkYXRlVmlld0FsbCgyMik7XG5cbmNvbnN0IHRvZG9NYWtlciA9ICgoaWQsIHRpdGxlLCBkdWVEYXRlLCBwcm9qZWN0TmFtZSwgcHJpb3JpdHkpID0+IHtyZXR1cm4ge2lkLCB0aXRsZSwgZHVlRGF0ZSwgcHJvamVjdE5hbWUsIHByaW9yaXR5fX0pO1xuXG5sZXQgdG9kb0xpc3QgPSBbIFxuICAgIHRvZG9NYWtlcigxLCdoZWxsbycsJzAvMDkvMjAyMCcsJ2dvZG9lJywgNSksXG4gICAgdG9kb01ha2VyKDIsJ2hlbGxvMicsJzAvMDkvMjAyMCcsJ2dvZG9lJywgNSksXG4gICAgdG9kb01ha2VyKDMsJ2hlbGxvMycsJzAvMDkvMjAyMCcsJ2dvZG9lJywgNSksXG4gICAgdG9kb01ha2VyKDQsJ2hlbGxvNCcsJzAvMDkvMjMzMDIwJywnZ280ZG9lJywgMiksXG4gICAgdG9kb01ha2VyKDUsJ2hlbGxvNScsJzAvMDkvMjAyMCcsJ2dvZG9lJywgMSksXG5dO1xuXG5ET01IYW5kbGVyLnRvZG8ucmVmcmVzaEFsbCh0b2RvTGlzdCk7XG5cblxuXG5cblxuY29uc3QgYWRkX25ldyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGQtbmV3LWJ1dHRvbicpO1xuY29uc3QgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mb3JtLXNlY3Rpb24nKTtcblxuY29uc3QgZm9ybXRvZG8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkLXRvZG8nKTtcbmNvbnN0IHRvZG9idG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdG8tZG8tdGFiJyk7XG5jb25zdCBmb3JtcHJvamVjdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hZGQtcHJvamVjdCcpO1xuY29uc3QgcHJvamVjdGJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwcm9qZWN0LXRhYicpO1xuY29uc3QgY2xvc2VidG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY2xvc2UtdGFiJyk7XG5cblxuXG5cbi8vIE9QRU4gVEhFIEFERCBGT1JNXG5hZGRfbmV3LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgZm9ybS5jbGFzc0xpc3QudG9nZ2xlKCdmb3JtLW9wZW4nKVxuICAgIGZvcm10b2RvLmNsYXNzTGlzdC5hZGQoJ2N1cnJlbnQnKTtcbn0pO1xuXG4vLyBUT0dHTEUgQkVUV0VFTiBUT0RPIEFORCBQUk9KRUNUIEZPUk1TXG50b2RvYnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgZm9ybXByb2plY3QuY2xhc3NMaXN0LnJlbW92ZShcImN1cnJlbnRcIik7XG4gICAgXG4gICAgZm9ybXRvZG8uY2xhc3NMaXN0LmFkZChcImN1cnJlbnRcIik7XG4gICAgXG59KTtcbnByb2plY3RidG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBmb3JtdG9kby5jbGFzc0xpc3QucmVtb3ZlKFwiY3VycmVudFwiKTtcbiAgICBmb3JtcHJvamVjdC5jbGFzc0xpc3QuYWRkKFwiY3VycmVudFwiKTtcbiAgICBcbn0pO1xuLy8gQ0xPU0UgVEhFIEFERCBGT1JNIFdJVEhPVVQgU1VCTUlUVElOR1xuY2xvc2VidG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBmb3JtcHJvamVjdC5jbGFzc0xpc3QucmVtb3ZlKCdjdXJyZW50Jyk7XG4gICAgZm9ybXRvZG8uY2xhc3NMaXN0LnJlbW92ZSgnY3VycmVudCcpO1xuICAgIGZvcm0uY2xhc3NMaXN0LnJlbW92ZSgnZm9ybS1vcGVuJyk7XG4gICAgXG4gICAgXG59KTsiXSwibmFtZXMiOlsiRE9NSGFuZGxlciIsInRvZG8iLCJ0YWJsZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInJlZnJlc2hBbGwiLCJ0b2RvQXJyYXkiLCJuZXdCb2R5IiwiY3JlYXRlRWxlbWVudCIsInBhcmVudE5vZGUiLCJyZXBsYWNlQ2hpbGQiLCJjbGVhckFsbCIsImZvckVhY2giLCJ0b2RvT2JqZWN0IiwiaWQiLCJ0aXRsZSIsImR1ZURhdGUiLCJwcm9qZWN0TmFtZSIsIm5ld1JvdyIsImluc2VydFJvdyIsImRhdGFzZXQiLCJudW0iLCJuZXdDaGsiLCJpbnNlcnRDZWxsIiwiQ2hrSW4iLCJ0eXBlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsYXNzTGlzdCIsInRvZ2dsZSIsIm1hcmtEb25lIiwiYXBwZW5kIiwidGV4dENvbnRlbnQiLCJuZXdFZGl0IiwiRWRpdEJ0biIsImFkZCIsIm5ld1JtdiIsIlJtdkJ0biIsInVwZGF0ZVZpZXdBbGwiLCJ0YXNrcyIsInByb2plY3QiLCJwcm9qZWN0c0xpc3RFbGVtZW50IiwibmFtZSIsIm5ld0l0ZW0iLCJuZXdCdG4iLCJuZXdEaXYiLCJmb3JtIiwiYWRkUHJvamVjdCIsInJlbW92ZSIsInJlbW92ZVByb2plY3QiLCJ1cGRhdGUiLCJwcm9qZWN0T3B0aW9uc0xpc3QiLCJuZXdPcHRpb24iLCJ2YWx1ZSIsInRvZG9NYWtlciIsInByaW9yaXR5IiwidG9kb0xpc3QiLCJhZGRfbmV3IiwiZm9ybXRvZG8iLCJ0b2RvYnRuIiwiZm9ybXByb2plY3QiLCJwcm9qZWN0YnRuIiwiY2xvc2VidG4iXSwic291cmNlUm9vdCI6IiJ9