(()=>{"use strict";const e=(()=>{const e=(()=>{let e=document.querySelector("table tbody");return{refreshAll:t=>{(()=>{const t=document.createElement("tbody");e.parentNode.replaceChild(t,e),e=t})(),t.forEach((t=>{(({id:t,title:o,dueDate:c,projectName:r})=>{((t,o,c,r)=>{const n=e.insertRow();n.dataset.num=t;const d=n.insertCell(0),l=document.createElement("input");l.type="checkbox",l.addEventListener("change",(()=>{(e=>{document.querySelector(`tr[data-num='${e}']`).classList.toggle("done")})(t)})),d.append(l),n.insertCell(1).textContent=o,n.insertCell(2).textContent=c,n.insertCell(3).textContent=r;const a=n.insertCell(4),s=document.createElement("button");s.dataset.num=t,s.classList.add("edit"),s.textContent="Edit",a.append(s);const u=n.insertCell(5),p=document.createElement("button");p.dataset.num=t,p.classList.add("rmv"),p.textContent="Remove",u.append(p)})(t,o,c,r)})(t)}))}}})(),t=e=>{document.querySelector("#view-all .project-no").textContent=e},o=(()=>{const e=document.querySelector(".projects-list");return{add:(t,o,r=0)=>{const n=document.createElement("li"),d=document.createElement("button"),l=document.createElement("div");n.id=`project-${t}`,c.addProject(t,o),l.classList.add("project-no"),d.classList.add("project"),n.classList.add("project"),l.textContent=r,d.textContent=o,d.append(l),n.append(d),e.append(n)},remove:e=>{document.querySelector(`#project-${e}`).remove(),c.removeProject(e)},update:(e,t)=>{document.querySelector(`#project-${e} .project-no`).textContent=t},updateViewAll:t}})(),c=(()=>{const e=document.querySelector(".form-section"),t=document.querySelector("#td-project-input"),o=e=>{const t=document.querySelector(".add-todo"),o=document.querySelector(".add-project");switch(e){case"todo":t.classList.add("current"),o.classList.remove("current");break;case"project":o.classList.add("current"),t.classList.remove("current")}};return{addProject:(e,o)=>{const c=document.createElement("option");c.value=`project-${e}`,c.textContent=o,t.append(c)},removeProject:e=>{document.querySelector(`option[value='project-${e}']`).remove()},show:()=>{o("todo"),e.classList.toggle("form-open")},switchFormsTo:o}})();return{todo:e,updateViewAll:t,project:o,init:()=>{const e=document.querySelector(".add-new-button"),t=document.querySelector("#to-do-tab"),o=document.querySelector("#project-tab"),r=document.querySelector("#close-tab");e.addEventListener("click",c.show),r.addEventListener("click",c.show),t.addEventListener("click",(()=>{c.switchFormsTo("todo")})),o.addEventListener("click",(()=>{c.switchFormsTo("project")}))}}})();e.init(),e.project.add(1,"Jogn1",1e3),e.project.add(2,"Jogn2",1e3),e.project.add(3,"Jogn3",1e3),e.project.add(4,"Jogn4",1e3),e.project.add(5,"Jogn5",1e3),e.project.add(6,"Jogn6",1e3),e.project.add(7,"nonumber"),e.project.add(8,"blablabla"),e.project.remove(5),e.project.remove(1),e.project.update(6,22),e.project.update(3,2e3),e.updateViewAll(22);const t=(e,t,o,c,r)=>({id:e,title:t,dueDate:o,projectName:c,priority:r});let o=[t(1,"hello","0/09/2020","godoe",5),t(2,"hello2","0/09/2020","godoe",5),t(3,"hello3","0/09/2020","godoe",5),t(4,"hello4","0/09/233020","go4doe",2),t(5,"hello5","0/09/2020","godoe",1)];e.todo.refreshAll(o)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,